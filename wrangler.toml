#:schema node_modules/wrangler/config-schema.json
name = "aibtcdev-api-cache"
main = "src/index.ts"
compatibility_date = "2024-11-09"
account_id = "6f54e90da6d1b280fe00a153cb394c68"
routes = [{ pattern = "cache.aibtc.dev", custom_domain = true }]

# Workers Logs
# Docs: https://developers.cloudflare.com/workers/observability/logs/workers-logs/
# Configuration: https://developers.cloudflare.com/workers/observability/logs/workers-logs/#enable-workers-logs
[observability]
enabled = true

[vars]
HIRO_API_KEY = "available on the Hiro platform https://platform.hiro.so"
SUPABASE_URL = "from Supabase project dashboard"
SUPABASE_SERVICE_KEY = "from Supabase project dashboard"

# Bind a Durable Object. Durable objects are a scale-to-zero compute primitive based on the actor model.
# Durable Objects can live for as long as needed. Use these when you need a long-running "server", such as in realtime apps.
# Docs: https://developers.cloudflare.com/workers/wrangler/configuration/#durable-objects
[[durable_objects.bindings]]
name = "HIRO_API_DO"
class_name = "HiroApiDO"

[[durable_objects.bindings]]
name = "SUPABASE_DO" 
class_name = "SupabaseDO"

# Durable Object migrations.
# Docs: https://developers.cloudflare.com/workers/wrangler/configuration/#migrations
[[migrations]]
tag = "v1"
new_classes = ["HiroApiDO", "SupabaseDO"]

# Bind a KV Namespace. Use KV as persistent storage for small key-value pairs.
# Docs: https://developers.cloudflare.com/workers/wrangler/configuration/#kv-namespaces
[[kv_namespaces]]
binding = "AIBTCDEV_CACHE_KV"
id = "89a4331f4e0d47da934eb16d8b2229fa"
